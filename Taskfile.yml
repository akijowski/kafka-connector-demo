version: '3'

dotenv:
  - '.stage.env'

tasks:
  default: task --list

  dc-local-up:
    desc: Start the local Docker-Compose stack
    cmds:
      - docker-compose up -d
  dc-local-down:
    desc: Stop the local Docker-Compose stack
    cmds:
      - docker-compose down
  kcat-local:
    desc: Consume messages from the local Kafka cluster
    cmds:
      - |
        docker run -it --rm --network kafka-demo --log-driver=none -a stdin -a stdout -a stderr \
          confluentinc/cp-kafkacat:latest \
          kafkacat \
          -b kafka:29092 \
          -r http://schemaregistry:8085 \
          -s avro \
          -t asgard.demo.ORDERS \
          -C -c 20 -e | jq . > kcat.json

  stage-tunnel:
    desc: TODO - Open an SSH tunnel to Stage MySQL
    cmds:
      - ssh -o StrictHostKeyChecking=no -L 3306:${STAGE_DB_HOST}:3306 ${SSH_USER}@${SSH_HOST}
    interactive: true
  dc-stage-up:
    desc: Start the Docker-Compose stack to connect to Stage
    cmds:
      - docker-compose -f docker-compose.stage.yaml up -d
  dc-stage-down:
    desc: Stop the Docker-Compose stack connected to Stage
    cmds:
      - docker-compose -f docker-compose.stage.yaml down

  k8s-cluster-create:
    desc: Create a Kind cluster
    cmds:
      - kind create cluster  --config=config/kind/node-config.yaml --wait 2m
      - ./bin/kind-ingress-nginx
  k8s-delete:
    desc: Delete the Kind cluster
    aliases:
      - k8s-down
    cmds:
      - kind delete cluster
  k8s-up:
    desc: Bring up the stack!
    aliases:
      - k8s
    deps:
      - k8s-cluster-create
    cmds:
      - kubectl apply -f .kubernetes/zookeeper
      - kubectl wait --for=condition=Available=true deploy/zookeeper --timeout=2m
      - kubectl apply -f .kubernetes/kafka
      - kubectl wait --for=condition=Available=true deploy/kafka-broker --timeout=2m
      - kubectl apply -f .kubernetes/controlcenter
      - kubectl wait --for=condition=Available=true deploy/controlcenter --timeout=3m
      - kubectl apply -f .kubernetes/connect
      - kubectl wait --for=condition=Available=true deploy/connect --timeout=2m
