version: '3.6'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 20
      interval: 10s
    ports:
      - 2181:2181
    env_file:
      - env/test/zookeeper.env
    networks:
      - kafka-demo-test

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    restart: always
    healthcheck:
      test: nc -z kafka 9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
      - 9101:9101
    env_file:
      - env/test/kafka-broker.env
    networks:
      - kafka-demo-test

  kafka-connect-debezium:
    image: confluentinc/cp-kafka-connect-base:latest
    container_name: conn-debezium
    restart: always
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: curl --user superUser:superUser --fail --silent --insecure http://kafka-connect-debezium:8083/ --output /dev/null || exit 1
    depends_on:
      kafka:
        condition: service_healthy
      mysql-old:
        condition: service_started
      mysql-new:
        condition: service_started
    ports:
      - 8083:8083
    env_file:
      - env/test/kafka-connect-debezium.env
    volumes:
      - $PWD/tmp/debezium/data:/data
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.9.7
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
    networks:
      - kafka-demo-test

  debezium-init:
    image: curlimages/curl:latest
    container_name: debezium-init
    restart: on-failure
    depends_on:
      kafka-connect-debezium:
        condition: service_healthy
    environment:
      CONNECTOR_NAME: source-debezium-00
      MYSQL_HOSTNAME: mysql-old
      MYSQL_PASSWORD: 'dbz'
      MYSQL_SERVER_ID: 1000
    volumes:
      - $PWD/bin/debezium:/scripts
    entrypoint: /bin/sh
    command: /scripts/test-curl-put
    networks:
      - kafka-demo-test

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control-center
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 9021:9021
    env_file:
      - env/test/kafka-control-center.env
    command:
      - bash
      - -c
      - |
        echo "Waiting one minute for Kafka brokers to start and necessary topics to be available"
        sleep 60
        /etc/confluent/docker/run
    networks:
      - kafka-demo-test

  mysql-old:
    image: mysql:8.0
    container_name: mysql-old
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
      - ${PWD}/data/test/02-db-host-change/mysql-old:/docker-entrypoint-initdb.d
      - ${PWD}/tmp/mysql/data:/data
    command:
      - mysqld
      - --log-bin=my-old-db-bin
    networks:
      - kafka-demo-test

  mysql-new:
    image: mysql:8.0
    container_name: mysql-new
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
      - ${PWD}/data/test/02-db-host-change/mysql-new:/docker-entrypoint-initdb.d
      - ${PWD}/tmp/mysql/data:/data
    command:
      - mysqld
      - --log-bin=my-new-db-bin
    networks:
      - kafka-demo-test

networks:
  kafka-demo-test:
    name: kafka-demo-test
